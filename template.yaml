AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  tofino-sam

  Sam-based version of tofino

Resources:
  JobPostingTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
        - AttributeName: 'Id'
          AttributeType: 'S'
        - AttributeName: 'ExternalId'
          AttributeType: 'S'
        - AttributeName: 'OriginUrl'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'Id'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: "Index_ExternalId"
          KeySchema:
            - AttributeName: 'ExternalId'
              KeyType: 'HASH'
          Projection:
            NonKeyAttributes:
              - 'OriginUrl'
            ProjectionType: 'INCLUDE'
        - IndexName: "Index_OriginUrl"
          KeySchema:
            - AttributeName: 'OriginUrl'
              KeyType: 'HASH'
          Projection:
            ProjectionType: 'KEYS_ONLY'
      BillingMode: 'PAY_PER_REQUEST'

  CrawlerProxyTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      AttributeDefinitions:
        - AttributeName: 'Id'
          AttributeType: 'S'
        - AttributeName: 'DeactivatedEpochSecond'
          AttributeType: 'N'
      KeySchema:
        - AttributeName: 'Id'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: "Index_DeactivatedEpochSecond"
          KeySchema:
            - AttributeName: 'DeactivatedEpochSecond'
              KeyType: 'HASH'
          Projection:
            ProjectionType: 'ALL'
      BillingMode: 'PAY_PER_REQUEST'

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: The security group for tofino Lmabda functions
      VpcId: 'vpc-04c5058d5d30e2414' # TODO: Migrate over from tofino CFN infrastructure
      SecurityGroupEgress:
        # TODO: Restrict the outbound traffic
        - CidrIp: '0.0.0.0/0'
          FromPort: -1
          ToPort: -1
          IpProtocol: '-1'

  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
  IndeedJobStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/indeed_job.asl.json
      DefinitionSubstitutions:
        IndeedSearcherFunctionArn: !GetAtt IndeedSearcherFunction.Arn
        IndeedDownloaderFunctionArn: !GetAtt IndeedDownloaderFunction.Arn
        IndeedJobParserFunctionArn: !GetAtt IndeedJobParserFunction.Arn
      Events:
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-statemachineeventsource.html
        TriggeringSchedule:
          Type: Schedule
          Properties:
            Description: Schedule to run Indeed job state machine every 4 hour
            Enabled: True
            Schedule: "rate(4 hours)"
            Input: "{\"url\":\"https://ca.indeed.com/jobs?q=data+analyst&sort=date&limit=50\"}"
      # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      Policies: 
        - LambdaInvokePolicy:
            FunctionName: !Ref IndeedSearcherFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref IndeedDownloaderFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref IndeedJobParserFunction

  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
  IndeedSearcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: functions.indeed_searcher.indeed_searcher.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 10
      Environment:
        Variables:
          CRAWLER_PROXY_TABLE: !Ref CrawlerProxyTable
      Policies:
        - VPCAccessPolicy: {}
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: '*' # TODO: Restrict to a certain resource
        - KMSDecryptPolicy:
            KeyId: '*' # TODO: Restrict to a certain resource
        - DynamoDBCrudPolicy:
            TableName: !Ref CrawlerProxyTable
        - Statement:
          - Sid: InvokeLambdaFunctionPolicy
            Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: '*' # TODO: Restrict to a certain resource

  IndeedDownloaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: functions.indeed_downloader.indeed_downloader.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 10
      Environment:
        Variables:
          INDEED_JOB_POSTING_S3_BUCKET: !Ref IndeedJobPostingBucket
          CRAWLER_PROXY_TABLE: !Ref CrawlerProxyTable
          JOB_POSTING_TABLE: !Ref JobPostingTable
      Policies:
        - VPCAccessPolicy: {}
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: '*' # TODO: Restrict to a certain resource
        - KMSDecryptPolicy:
            KeyId: '*' # TODO: Restrict to a certain resource
        - S3CrudPolicy:
            BucketName: !Ref IndeedJobPostingBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref CrawlerProxyTable
        - DynamoDBCrudPolicy:
            TableName: !Ref JobPostingTable
        - Statement:
          - Sid: InvokeLambdaFunctionPolicy
            Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: '*' # TODO: Restrict to a certain resource

  IndeedJobParserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: functions.indeed_job_parser.indeed_job_parser.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 10
      Environment:
        Variables:
          INDEED_JOB_POSTING_S3_BUCKET: !Ref IndeedJobPostingBucket
          JOB_POSTING_TABLE: !Ref JobPostingTable
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref IndeedJobPostingBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref JobPostingTable

  StateMachineExecutionNotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: functions.state_machine_execution_notifier.state_machine_execution_notifier.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 30
      Environment:
        Variables:
          STATE_MACHINE_EXECUTION_NOTIFICATION_TOPIC: !Ref EmailNotificationTopic
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt EmailNotificationTopic.TopicName

  StateMachineExecutionNotifierLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref StateMachineExecutionNotifierFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt IndeedJobStateMachineExecutionFailureEventRule.Arn

  IndeedJobPostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  EmailNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: 'Tofino-Email Notification'
      Subscription:
        - Protocol: 'email'
          Endpoint: 'madcated.lu+tofino-sam@gmail.com'

  IndeedJobStateMachineExecutionFailureEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Send SNS topic when IndeedJobStateMachine execution fails or timeoout'
      EventPattern:
        source:
          - 'aws.states'
        detail-type:
          - 'Step Functions Execution Status Change'
        detail:
          status:
            - 'FAILED'
            - 'TIMED_OUT'
            - 'ABORTED'
          stateMachineArn:
            - !Ref IndeedJobStateMachine
      Targets:
        - Id: 'Lambda-Notification'
          Arn: !GetAtt StateMachineExecutionNotifierFunction.Arn
          InputTransformer:
            InputPathsMap:
              accountId: '$.account'
              region: '$.region'
              stateMachineArn: '$.detail.stateMachineArn'
              executionArn: '$.detail.executionArn'
              status: '$.detail.status'
              startDate: '$.detail.startDate'
              stopDate: '$.detail.stopDate'
            InputTemplate: |
              {
                "status": <status>,
                "region": <region>,
                "executionArn": <executionArn>
              }             

Outputs:
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  IndeedJobStateMachineArn:
    Description: "Indeed Job State machine ARN"
    Value: !Ref IndeedJobStateMachine
  IndeedJobStateMachineRoleArn:
    Description: "IAM Role created for Indeed Job State machine based on the specified SAM Policy Templates"
    Value: !GetAtt IndeedJobStateMachineRole.Arn
